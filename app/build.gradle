apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'koin'

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "de.westnordost.luftlinie"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    def lifecycle_version = "2.2.0"

    implementation fileTree(dir: "libs", include: ["*.jar"])
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0'

    // Android widgets
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.fragment:fragment-ktx:1.2.5'

    implementation 'de.westnordost:osmfeatures-android:1.1'

    // View models
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // HTTP API
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    // JSON parsing
    implementation 'com.squareup.moshi:moshi:1.9.3'
    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.9.3")

    // Dependency injection
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-fragment:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"
}

import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def bcp47ExportLanguages = [
        "de","en","en-AU","en-GB"
].toSet()

task downloadPresets {
    doLast {
        def targetDir = "app/src/main/assets/osmfeatures"
        def presetsUrl = new URL("https://raw.githubusercontent.com/openstreetmap/iD/develop/data/presets/presets.json")
        def contentsUrl = new URL("https://api.github.com/repos/openstreetmap/iD/contents/dist/locales")

        new File("$targetDir/presets.json").withOutputStream { it << presetsUrl.openStream() }

        def slurper = new JsonSlurper()
        slurper.parse(contentsUrl, "UTF-8").each {
            if(it.type == "file") {
                def language = it.name.substring(0, it.name.lastIndexOf("."))
                if (bcp47ExportLanguages.contains(language)) {
                    def content = slurper.parse(new URL(it.download_url), "UTF-8")
                    def presets = content.values()[0]?.presets?.presets
                    if (presets) {
                        def json = JsonOutput.prettyPrint(JsonOutput.toJson([presets: presets]))
                        def javaLanguage = bcp47LanguageTagToJavaLanguageTag(language)
                        new File("$targetDir/${javaLanguage}.json").write(json, "UTF-8")
                    }
                }
            }
        }
    }
}

// Java (and thus also Android) uses some old iso (language) codes. F.e. id -> in etc.
// so the localized files also need to use the old iso codes
static def bcp47LanguageTagToJavaLanguageTag(String bcp47) {
    def locale = Locale.forLanguageTag(bcp47)
    def result = locale.language
    if (!locale.country.isEmpty()) result += "-" + locale.country
    return result
}